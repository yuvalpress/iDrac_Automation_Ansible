#esxi_raid__excel.yml
---
- name: Set ESXi Raid
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    search_range:
      start_col: 1
      end_col: 6
      start_row: 2

  vars_files: ../../../vars/passwords.yml

  tasks:
    - name: Retrive iDrac Data
      open_excel:
        src: ../../../files/project_configuration_sample.xlsx
        sheet_name: ESXi
        op: "r"
        read_range: "{{ search_range }}"
      register: data
      ignore_errors: true

    - name: Make sure server is powered off
      raw: racadm -r "{{ item.address }}" -u "{{ iDRAC_Username }}" -p "{{ iDRAC_Password }}" serveraction powerdown
      when:
        - "item.address != 'N/A'"
      loop: "{{ data.sheet_index_0 }}"
      register: powerstate

    - name: Servers power OFF status
      debug:
        msg: "All servers are powered OFF"

#    - name: Check powerstate
#      fail:
#       msg: "iDRAC {{ item.item.address }} didn't shut down properly"
#      when:
#        - ('Server is already powered OFF.' not in item.stdout_lines[6]) and ('Server power operation successful' not in item.stdout_lines[6])
#      loop: "{{ powerstate.results }}"
#      loop_control:
#        label: ""

    - name: Check if ISO file is mounted to iDRAC server
      raw: racadm -r "{{ item.address }}" -u "{{ iDRAC_Username }}" -p "{{ iDRAC_Password }}" remoteimage -s
      when: "item.address != 'N/A'"
      loop: "{{ data.sheet_index_0 }}"
      register: image

    - name: ISO file mounting status before ISO mounting
      debug:
        msg: "{% if 'ShareName ' != item.stdout_lines[9] %} iDRAC Server '{{ item.item.address }}' has an ISO file mounted {% else %} No ISO file is mounted to iDRAC Server '{{ item.item.address }}' {% endif %}"
      when: "item.item.address != 'N/A'"
      loop: '{{ image.results }}'
      loop_control:
        label: "{{ item.item.address }}"

    - name: Demount ISO file from iDRAC server if needed
      raw: racadm -r "{{ item.item.address }}" -u "{{ iDRAC_Username }}" -p "{{ iDRAC_Password }}" remoteimage -d
      when:
        - "item.item.address != 'N/A'"
        - "'ShareName ' != item.stdout_lines[9]"
      loop: "{{ image.results }}"
      loop_control:
        label: "{{ item.item.address }}"

    - name: Check if ISO file is mounted to iDRAC server after demounting
      raw: racadm -r "{{ item.address }}" -u "{{ iDRAC_Username }}" -p "{{ iDRAC_Password }}" remoteimage -s
      when: "item.address != 'N/A'"
      loop: "{{ data.sheet_index_0 }}"
      register: image_after_demount

    - name: ISO file mounting status after demounting
      debug:
        msg: "{% if 'ShareName ' != item.stdout_lines[9] %} iDRAC Server '{{ item.item.address }}' has an ISO file mounted {% else %} No ISO file is mounted to iDRAC
 Server '{{ item.item.address }}' {% endif %}"
      when: "item.item.address != 'N/A'"
      loop: '{{ image_after_demount.results }}'
      loop_control:
        label: "{{ item.item.address }}"

    - name: Set ESXi Remote Image to boot from
      raw: "racadm -r '{{ item.address }}' -u '{{ iDRAC_Username }}' -p '{{ iDRAC_Password }}' remoteimage -c -u '{{ share_user }}' -p '{{ share_pass }}' -l {% if '6.5' in item.os_image %} '{{ share_esxi6_5_path }}' {% elif '6' in item.os_image %} '{{ share_esxi6_path }}' {% else %} '{{ share_esxi5_path }}' {% endif %}"
      when:
        - "item.os_image != 'N/A'"
        - "item.address != 'N/A'"
      loop: "{{ data.sheet_index_0 }}"
      loop_control:
        label: "{{ item.address }} {{ item.os_image }}"

    - name: Check if ISO file is mounted to iDRAC server
      raw: racadm -r "{{ item.address }}" -u "{{ iDRAC_Username }}" -p "{{ iDRAC_Password }}" remoteimage -s
      when: "item.address != 'N/A'"
      loop: "{{ data.sheet_index_0 }}"
      register: image_after_mount

    - name: ISO file mounting status after mounting
      debug:
        msg: "{% if 'ShareName ' != item.stdout_lines[9] %} iDRAC Server '{{ item.item.address }}' has an ISO file mounted {% else %} No ISO file is mounted to iDRAC
 Server '{{ item.item.address }}' {% endif %}"
      when: "item.item.address != 'N/A'"
      loop: '{{ image_after_mount.results }}'
      loop_control:
        label: "{{ item.item.address }}"

    - name: Boot once from ISO file after restart
      raw: racadm -r "{{ item.address }}" -u "{{ iDRAC_Username }}" -p "{{ iDRAC_Password }}" set iDRAC.VirtualMedia.BootOnce 1
      when:
        - "item.address != 'N/A'"
      loop: "{{ data.sheet_index_0 }}"
      loop_control:
        label: ""
      register: bootOnce

    - name: BootOnce Status
      debug:
        msg: "{% if 'Object value modified successfully' in item.stdout_lines[7] %} BootOnce 1 has been set for iDRAC Server '{{ item.item.address }}' {% else %} BootOnce 1 wasn't set as expected {% endif %}"
      when: "item.item.address != 'N/A'"
      loop: "{{ bootOnce.results }}"
      loop_control:
        label: ""

    - name: Set ISO file as boot device
      raw: racadm -r "{{ item.address }}" -u "{{ iDRAC_Username }}" -p "{{ iDRAC_Password }}" set iDRAC.ServerBoot.FirstBootDevice VCD-DVD
      when: "item.address != 'N/A'"
      loop: "{{ data.sheet_index_0 }}"
      loop_control:
        label: "{{ item.address }}"
      register: bootDevice

    - name: BootDevice Status
      debug:
        msg: "{% if 'Object value modified successfully' in item.stdout_lines[7] %} BootDevice VCD-DVD has been set for iDRAC Server '{{ item.item.address }}' {% else %} BootDevice VCD-DVD wasn't set as expected {% endif %}"
      when: "item.item.address != 'N/A'"
      loop: "{{ bootDevice.results }}"
      loop_control:
        label: ""

    - name: Hardreset
      raw: racadm -r "{{ item.address }}" -u "{{ iDRAC_Username }}" -p "{{ iDRAC_Password }}" serveraction hardreset
      when: "item.address != 'N/A'"
      loop: "{{ data.sheet_index_0 }}"
      register: hreset

    - name: Hardreset Status
      debug:
        msg: "{% if 'Server power operation successful' in item.stdout_lines[6] %} iDRAC Server '{{ item.item.address }}' has performed Hardreset {% else %} iDRAC Server '{{ item.item.address }}' did no perform a hardreset {% endif %}"
      when: "item.item.address != 'N/A'"
      loop: "{{ hreset.results }}"
      loop_control:
        label: ""



